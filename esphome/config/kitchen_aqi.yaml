---

substitutions:
  devicename: kitchen
  upper_devicename: "Kitchen"
  template_id: kitchen

esphome:
  name: ${devicename}
  platform: ESP32
  board: esp-wrover-kit

wifi:
  ssid: !secret ssid
  password: !secret wifi_passwd
  manual_ip:
    static_ip: !secret static_kitchen_aqi
    gateway: !secret gateway
    subnet: 255.255.255.0
  ap:
    ssid: "${upper_devicename}_fallback_hotspot"
    password: !secret ap_passwd

captive_portal:
logger:
api:
ota:

uart:
  rx_pin: GPIO22
  tx_pin: GPIO21
  baud_rate: 9600

binary_sensor:
  - platform: gpio
    pin: GPIO33
    name: "${upper_devicename} motion"
    device_class: motion
  - platform: gpio
    pin:
      number: GPIO34
      # mode: INPUT_PULLUP
      inverted: True
    name: "${upper_devicename} button"
    # On press show ding dong page and activate doorbell script in Home Assistant
    # Only if someone at home
    # on_press:
    #   then:
    #     - display.page.show: ding_page
    #     - component.update: doorbell_display
    #     - delay: 4s
    #     - display.page.show: name_page
    #     - component.update: doorbell_display
    #     - homeassistant.service:
    #         service: script.turn_on
    #         data:
    #           entity_id: "script.doorbell"
  # If front door is opened, show come in page
  # - platform: homeassistant
  #   name: "Doorbell Copy Door Relay"
  #   entity_id: switch.door_lock_relay
  #   id: door_lock
  #   on_press:
  #     then:
  #       - display.page.show: come_in_page
  #       - component.update: doorbell_display
  #       - delay: 5s
  #       - display.page.show: name_page
  #       - component.update: doorbell_display
  - platform: status
    name: "${upper_devicename}"

sensor:
  # - platform: homeassistant
  #   entity_id: group.person
  #   id: anybody_home
  # - platform: wifi_signal
  #   name: "${upper_devicename} WiFi Signal"
  #   update_interval: 30s
  - platform: sds011
    update_interval: 1min
    pm_2_5:
      name: "2.5µm Particles in the ${upper_devicename}"
    pm_10_0:
      name: "10µm Particles in the ${upper_devicename}"

switch:
  - platform: restart
    name: "Restart ${upper_devicename}"

esp32_camera:
  name: "${upper_devicename} Camera"
  external_clock:
    pin: GPIO32
    frequency: 20MHz
  i2c_pins:
    sda: GPIO13
    scl: GPIO12
  data_pins: [GPIO5, GPIO14, GPIO4, GPIO15, GPIO18, GPIO23, GPIO36, GPIO39]
  vsync_pin: GPIO27
  href_pin: GPIO25
  pixel_clock_pin: GPIO19
  power_down_pin: GPIO26
  resolution: 640x480
  max_framerate: 20 fps
  idle_framerate: 0.2 fps
  jpeg_quality: 10
  vertical_flip: true
  horizontal_mirror: true

# font:
#   - file: "fonts/unispace_bd.ttf"
#     id: unispace
#     size: 20

# time:
#   - platform: homeassistant
#     id: homeassistant_time

# display:
#   - platform: ssd1306_i2c
#     model: 'SSD1306 128x64'
#     rotation: 180
#     address: 0x3C
#     id: doorbell_display
#     pages:
# # Name page
#       - id: name_page
#         lambda: |-
#           it.print(64, 0, id(unispace), TextAlign::TOP_CENTER, "Aboulafia");
#           it.print(64, 20, id(unispace), TextAlign::TOP_CENTER, "Yuval");
#           it.print(64, 40, id(unispace), TextAlign::TOP_CENTER, "Tohar");
# # Ding Dong page
#       - id: ding_page
#         lambda: |-
#           if (id(anybody_home).state == 'home') {
#             it.print(64, 0, id(unispace), TextAlign::TOP_CENTER, "DING");
#             it.print(64, 64, id(unispace), TextAlign::BASELINE_CENTER, "DONG");
#           } else {
#             it.print(64, 0, id(unispace), TextAlign::TOP_CENTER, "NOBODY");
#             it.print(64, 64, id(unispace), TextAlign::BASELINE_CENTER, "HOME");
#           }
# # Welcome in page
#       - id: come_in_page
#         lambda: |-
#             it.print(64, 0, id(unispace), TextAlign::TOP_CENTER, "Welcome");
#             it.print(64, 64, id(unispace), TextAlign::BASELINE_CENTER, "In");
